{"version":3,"sources":["modules/Weather.js","modules/Time.js","modules/Calendar.js","modules/Feed.js","modules/Subway.js","modules/Home.js","modules/Remote.js","App.js","serviceWorker.js","index.js"],"names":["Weather","state","weather","updated","icon","that","this","props","socket","on","data","setState","timestamp","body","currently","temperature","now","apparentTemperature","dailyData","_","isEmpty","Math","round","minutely","summary","daily","react_default","a","createElement","style","backgroundColor","color","className","temperatureHigh","temperatureLow","moment","unix","time","format","dist_default","fromNow","Component","Time","canvas","refs","getPosition","ms","Date","yearStartMS","getFullYear","getTime","totalDistanceMS","PI","setInterval","width","clockWrapper","clientWidth","height","ctx","getContext","radius","scale","translate","clearRect","ang","font","fillStyle","textBaseline","textAlign","forEach","month","num","rotate","fillText","drawNumbers","winterStartMS","winterEndMS","springStartMS","springEndMS","summerStartMS","summerEndMS","fallStartMS","fallEndMS","beginPath","strokeStyle","lineWidth","arc","stroke","closePath","drawSeasons","nowMS","lineCap","moveTo","lineTo","drawTime","backgroundImage","concat","image","ref","Calendar","calendar","calendarItems","items","todaysEvents","tomorrowsEvents","otherEvents","item","index","start","dateTime","friendlyTime","day","date","push","add","length","map","key","id","Feed","feed","console","log","createMarkup","bind","markup","__html","_this2","feedItems","lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","autoplaySpeed","autoplay","visual","url","title","origin","published","dangerouslySetInnerHTML","content","Subway","subway","stops","line","stop","updates","station","update","low","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","background","opacity","src_modules_Time","src_modules_Calendar","src_modules_Weather","src_modules_Subway","src_modules_Feed","Remote","value","changeImage","assertThisInitialized","changeOpacity","handleChange","fetch","credentials","headers","Content-Type","method","JSON","stringify","q","then","response","catch","error","event","target","type","placeholder","onChange","onClick","getSocket","io","App","Switch","Route","exact","path","render","src_modules_Remote","assign","src_modules_Home","Boolean","window","location","hostname","match","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.054990f3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Weather.scss';\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport Moment from \"react-moment\";\n\nclass Weather extends Component {\n    state = {\n        weather: {},\n        updated: \"\",\n        icon: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if(data.weather) {\n                that.setState({ \n                    updated: data.weather.timestamp, \n                    icon: data.weather.body.currently.icon,\n                    weather: data.weather.body\n                });\n            }\n        });\n    }\n\n    render() {\n        var temperature = \"--\";\n        var now = \"--\"\n        var apparentTemperature = \"--\";\n        var dailyData = [];\n        if (!_.isEmpty(this.state.weather)) {\n            temperature = Math.round(this.state.weather.currently.temperature);\n            apparentTemperature = Math.round(this.state.weather.currently.apparentTemperature);\n            now = this.state.weather.minutely.summary;\n            dailyData = this.state.weather.daily.data;\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"weather module\">\n                {!_.isEmpty(this.state.weather) ? (\n                    <div>\n                        <div className=\"now\">\n                            <div><span className=\"temperature\">{temperature}&deg;</span><span>Feels like {apparentTemperature}&deg;</span></div>\n                            <div className=\"summary\">{now}</div>\n                        </div>\n\n                        <div className=\"day\">\n                            <h2 className=\"group-name\">Today H{Math.round(dailyData[0].temperatureHigh)}&deg; L{Math.round(dailyData[0].temperatureLow)}&deg;</h2>\n                            <div className=\"day-summary\">{dailyData[0].summary}</div>\n                        </div>\n\n                        <div className=\"day\">\n                            <h2 className=\"group-name\">Tomorrow H{Math.round(dailyData[1].temperatureHigh)}&deg; L{Math.round(dailyData[1].temperatureLow)}&deg;</h2>\n                            <div className=\"day-summary\">{dailyData[1].summary}</div>\n                        </div>\n\n                        <div className=\"day\">\n                            <h2 className=\"group-name\">{moment.unix(dailyData[2].time).format(\"dddd\")} H{Math.round(dailyData[2].temperatureHigh)}&deg; L{Math.round(dailyData[2].temperatureLow)}&deg;</h2>\n                            <div className=\"day-summary\">{dailyData[2].summary}</div>\n                        </div>\n\n\n\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Weather;","import React, { Component } from 'react';\nimport Moment from \"react-moment\";\nimport './Time.scss';\n\nclass Time extends Component {\n  componentDidMount() {\n    var that = this;\n    var canvas = this.refs.canvas;\n\n    setInterval(function () {\n      var width = that.refs.clockWrapper.clientWidth;\n      canvas.width = width * 2;\n      canvas.height = width * 2;\n      canvas.style.width = width + \"px\";\n      canvas.style.height = width + \"px\";\n      const ctx = that.refs.canvas.getContext('2d');\n      var radius = canvas.height / 4;\n      ctx.scale(2, 2);\n      ctx.translate(radius, radius);\n      radius = radius * 0.8;\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      drawNumbers(ctx, radius);\n      drawSeasons(ctx, radius);\n      drawTime(ctx, radius);\n    }, 1000);\n\n    function drawNumbers(ctx, radius) {\n      var ang;\n      ctx.font = radius * 0.15 + \"px arial\";\n      ctx.fillStyle = \"white\";\n      ctx.textBaseline = \"middle\";\n      ctx.textAlign = \"center\";\n      var months = [\n        \"Jan\",\n        \"•\",\n        \"•\",\n        \"Apr\",\n        \"•\",\n        \"•\",\n        \"Jul\",\n        \"•\",\n        \"•\",\n        \"Oct\",\n        \"•\",\n        \"•\"\n      ];\n      months.forEach(function (month, num) {\n        ang = num * Math.PI / 6;\n        ctx.rotate(ang);\n        ctx.translate(0, -radius * 0.75);\n        ctx.rotate(-ang);\n        ctx.fillText(month, 0, 0);\n        ctx.rotate(ang);\n        ctx.translate(0, radius * 0.75);\n        ctx.rotate(-ang);\n      });\n    }\n\n    function getPosition(ms) {\n      var now = new Date();\n      var yearStartMS = new Date(now.getFullYear(), 0, 1).getTime();\n      var yearEndMS = new Date(now.getFullYear(), 11, 31).getTime();\n\n      var totalDistanceMS = yearEndMS - yearStartMS;\n      var totalDistanceRadians = 2 * Math.PI;\n\n      var distanceMS = ms - yearStartMS;\n\n      var distanceRatio = distanceMS / totalDistanceMS;\n\n      return totalDistanceRadians * distanceRatio - (.5 * Math.PI);\n    }\n\n    function drawSeasons(ctx, radius) {\n      var now = new Date();\n      var winterStartMS = new Date(now.getFullYear() - 1, 11, 21).getTime();\n      var winterEndMS = new Date(now.getFullYear(), 2, 20).getTime();\n\n      var springStartMS = new Date(now.getFullYear(), 2, 20).getTime();\n      var springEndMS = new Date(now.getFullYear(), 5, 21).getTime();\n\n      var summerStartMS = new Date(now.getFullYear(), 5, 21).getTime();\n      var summerEndMS = new Date(now.getFullYear(), 8, 23).getTime();\n\n      var fallStartMS = new Date(now.getFullYear(), 8, 23).getTime();\n      var fallEndMS = new Date(now.getFullYear() - 1, 11, 21).getTime();\n\n      ctx.beginPath();\n      ctx.strokeStyle = \"#8FE4FF\";\n      ctx.lineWidth = radius * 0.06;\n      ctx.arc(0, 0, radius, getPosition(winterStartMS), getPosition(winterEndMS) - 0.05);\n      ctx.stroke();\n      ctx.closePath();\n\n      ctx.beginPath();\n      ctx.strokeStyle = \"#BCFF79\";\n      ctx.lineWidth = radius * 0.06;\n      ctx.arc(0, 0, radius, getPosition(springStartMS), getPosition(springEndMS) - 0.05);\n      ctx.stroke();\n      ctx.closePath();\n\n      ctx.beginPath();\n      ctx.strokeStyle = \"#FFED48\";\n      ctx.lineWidth = radius * 0.06;\n      ctx.arc(0, 0, radius, getPosition(summerStartMS), getPosition(summerEndMS) - 0.05);\n      ctx.stroke();\n      ctx.closePath();\n\n      ctx.beginPath();\n      ctx.strokeStyle = \"#FFBC7E\";\n      ctx.lineWidth = radius * 0.06;\n      ctx.arc(0, 0, radius, getPosition(fallStartMS), getPosition(fallEndMS) - 0.05);\n      ctx.stroke();\n      ctx.closePath();\n    }\n\n    function drawTime(ctx, radius) {\n      var now = new Date();\n      var nowMS = now.getTime();\n\n      ctx.beginPath();\n      ctx.strokeStyle = \"white\";\n      ctx.lineWidth = radius * 0.02;\n      ctx.lineCap = \"round\";\n      ctx.moveTo(0, 0);\n      ctx.rotate(getPosition(nowMS) + (.5 * Math.PI));\n      ctx.lineTo(0, -radius * 0.9);\n      ctx.stroke();\n      ctx.closePath();\n\n      ctx.beginPath();\n      ctx.strokeStyle = \"rgba(0, 0, 0, 0.35)\";\n      ctx.rotate(-(getPosition(nowMS) + (.5 * Math.PI)));\n      ctx.lineCap = \"square\";\n      ctx.lineWidth = radius * 0.06;\n      ctx.arc(0, 0, radius, getPosition(new Date(now.getFullYear(), 0, 1).getTime()), getPosition(nowMS));\n      ctx.stroke();\n      ctx.closePath();\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ backgroundImage: `url(${this.props.image})`, backgroundColor: this.props.color }} className=\"module time\">\n        <div className=\"content\">\n          <div className=\"time\">\n            <Moment format=\"h:mm\" /><span className=\"ampm\"><Moment format=\"A\" /></span>\n          </div>\n          <div className=\"date\">\n            <Moment format=\"dddd, MMMM Do\" />\n          </div>\n\n          <div ref=\"clockWrapper\" className=\"clock\">\n            <canvas ref=\"canvas\"></canvas>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Time;","import React, { Component } from 'react';\nimport './Calendar.scss';\nimport _ from \"lodash\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nclass Calendar extends Component {\n    state = {\n        calendar: {},\n        updated: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if (data[\"calendar-\" + that.props.calendar]) {\n                that.setState({\n                    calendar: data[\"calendar-\" + that.props.calendar].body,\n                    updated: data[\"calendar-\" + that.props.calendar].timestamp\n                });\n            }\n        });\n    }\n\n    render() {\n        if (!_.isEmpty(this.state.calendar)) {\n            var calendarItems = this.state.calendar.items;\n            var todaysEvents = [];\n            var tomorrowsEvents = [];\n            var otherEvents = [];\n            calendarItems.forEach(function (item, index) {\n                if (item.start.dateTime) {\n                    calendarItems[index].friendlyTime = moment(item.start.dateTime).format(\"h:mma\");\n                    calendarItems[index].day = moment(item.start.dateTime).format(\"YYYY-MM-DD\");\n                } else if (item.start.date) {\n                    calendarItems[index].friendlyTime = \"All day\";\n                    calendarItems[index].day = moment(item.start.date).format(\"YYYY-MM-DD\");\n                }\n                if (moment().format(\"YYYY-MM-DD\") === calendarItems[index].day) {\n                    todaysEvents.push(item);\n                } else if (moment().add(1, 'days').format(\"YYYY-MM-DD\") === calendarItems[index].day) {\n                    tomorrowsEvents.push(item);\n                } else {\n                    otherEvents.push(item);\n                }\n            });\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module calendar\">\n                {!_.isEmpty(this.state.calendar) ? (\n                    <div>\n                        <h1 className=\"calendar-name\">{this.state.calendar.summary}</h1>\n\n                        {todaysEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">Today</h2>\n                                {todaysEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\">{item.friendlyTime}</p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        {tomorrowsEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">Tomorrow</h2>\n                                {tomorrowsEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\">{item.friendlyTime}</p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        {otherEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">2+ Days From Now</h2>\n                                {otherEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\"><Moment format=\"M/D\">{item.day}</Moment></p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        {!calendarItems.length ? (\n                            <div className=\"none\">No events</div>\n                        ): null}\n\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Calendar;","import React, { Component } from 'react';\nimport './Feed.scss';\nimport _ from \"lodash\";\nimport Slider from 'react-slick';\nimport Moment from 'react-moment';\n\nclass Feed extends Component {\n    state = {\n        feed: {},\n        updated: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if (data.feed) {\n                that.setState({\n                    updated: data.feed.timestamp,\n                    feed: data.feed.body\n                });\n                console.log(data.feed)\n            }\n        });\n        this.createMarkup = this.createMarkup.bind(this);\n    }\n\n    createMarkup(markup) {\n        return { __html: markup };\n    }\n\n    render() {\n        var feedItems = [];\n        var settings = {\n            dots: false,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            autoplaySpeed: 15000,\n            autoplay: true\n        };\n        if (!_.isEmpty(this.state.feed)) {\n            feedItems = this.state.feed.items;\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module feed\">\n                {!_.isEmpty(this.state.feed) ? (\n                    <div>\n                        <Slider {...settings}>\n                            {feedItems.map(item =>\n                                <div key={item.id}>\n                                    {item.visual && item.visual.url !== \"none\" ? (\n                                        <div className=\"image\" style={{ backgroundImage: `url(${item.visual.url})` }}></div>\n                                    ) : (null)}\n                                    <div className=\"content\">\n                                        <h1 className=\"title\">{item.title}</h1>\n                                        <p className=\"published\">{item.origin.title} &bull; <Moment fromNow>{item.published}</Moment></p>\n                                        <p className=\"summary\" dangerouslySetInnerHTML={this.createMarkup(item.summary?(item.summary.content):(item.content.content))}></p>\n                                    </div>\n                                </div>\n                            )}\n                        </Slider>\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Feed;","import React, { Component } from 'react';\nimport './Subway.scss';\nimport _ from \"lodash\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nclass Subway extends Component {\n    state = {\n        subway: {},\n        updated: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if (data.subway) {\n                that.setState({\n                    subway: data.subway.body,\n                    updated: data.subway.timestamp\n                });\n            }\n        });\n    }\n\n    render() {\n        if (!_.isEmpty(this.state.subway)) {\n            var subway = this.state.subway;\n            var stops = [];\n            subway.forEach(function (line) {\n                line.stops.forEach(function (stop) {\n                    if (stop.updates.length > 3) {\n                        stop.updates.length = 3;\n                    }\n                    stops.push(stop);\n                });\n            });\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module subway\">\n                {!_.isEmpty(this.state.subway) ? (\n                    <div>\n                        {stops.map((stop, index) =>\n                            <div className=\"stop\" key={index}>\n                                <div>\n                                    <div className={\"line-\" + stop.line}>{stop.line}</div>\n                                </div>\n\n                                <div>\n                                    <h2 className=\"group-name\">{stop.station}</h2>\n                                    {stop.updates.map((update, index) =>\n                                        <div className=\"update\" key={index}>\n                                            {moment(update.time.low * 1000).fromNow()}\n                                        </div>\n                                    )}\n                                    {!stop.updates.length ? (\n                                        <div className=\"update\">No trains</div>\n                                    ) : null}\n                                </div>\n                            </div>\n                        )}\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Subway;","import React, { Component } from 'react';\nimport './Home.scss';\nimport Weather from './Weather.js';\nimport Time from './Time.js';\nimport Calendar from './Calendar.js';\nimport Feed from './Feed.js';\nimport Subway from './Subway.js';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            background: \"\",\n            opacity: \"\"\n        }\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"display\", function (data) {\n            if (data.background) {\n                that.setState({ background: data.background });\n            }\n            if (data.opacity) {\n                that.setState({ opacity: data.opacity });\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"cards\" style={{ backgroundImage: `url(${this.state.background})` }}>\n                    <Time color=\"rgba(0, 0, 0, 0.35)\" />\n                    <Calendar socket={this.props.socket} color=\"rgb(121, 112, 255)\" calendar=\"7afrbvotf8p1qcjcpbqp2639as@group.calendar.google.com\" />\n                    <Calendar socket={this.props.socket} color=\"rgb(253, 147, 72)\" calendar=\"iamnickvolpe@gmail.com\" />\n                    <Calendar socket={this.props.socket} color=\"rgb(210, 102, 255)\" calendar=\"jenn.sager@gmail.com\" />\n                    <Weather socket={this.props.socket} color=\"rgba(0, 0, 0, 0.35)\" />\n                    <Subway socket={this.props.socket} color=\"rgba(0, 0, 0, 0.35)\" />\n                    <Feed socket={this.props.socket} color=\"white\" />\n                </div>\n                <div className=\"cover\" style={{ opacity: this.state.opacity }}></div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\nimport './Remote.scss';\n\nclass Remote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\"\n        }\n        this.changeImage = this.changeImage.bind(this);\n        this.changeOpacity = this.changeOpacity.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    changeImage() {\n        fetch(\n            \"/api/randomize-background\", {\n                credentials: \"same-origin\",\n                headers: { \"Content-Type\": \"application/json\" },\n                method: \"POST\",\n                body: JSON.stringify({q: this.state.value})\n            }\n        ).then(function(response) {\n            console.log(response);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    changeOpacity(opacity) {\n        fetch(\n            \"/api/display\", {\n                credentials: \"same-origin\",\n                headers: { \"Content-Type\": \"application/json\" },\n                method: \"POST\",\n                body: JSON.stringify({opacity: opacity})\n            }\n        ).then(function(response) {\n            console.log(response);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n      }\n\n    render() {\n        return (\n            <div className=\"remote\">\n                <div className=\"card image\">\n                    <input type=\"text\" placeholder=\"Search Images...\" value={this.state.value} onChange={this.handleChange} />\n                    <button onClick={this.changeImage}>Change Image</button>\n                </div>\n                <div className=\"card opacity\">\n                    <button onClick={() => this.changeOpacity(\"0\")}>100%</button>\n                    <button onClick={() => this.changeOpacity(\".5\")}>50%</button>\n                    <button onClick={() => this.changeOpacity(\"1\")}>0%</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Remote;","import React, { Component } from 'react';\nimport 'normalize.css';\nimport './App.scss';\nimport Home from './modules/Home.js';\nimport Remote from './modules/Remote.js'\nimport { Route, Switch } from 'react-router-dom';\nimport io from \"socket.io-client\";\n\nfunction getSocket() {\n  if (process.env.NODE_ENV === \"development\") {\n    return io(\"localhost:3000\");\n  } else {\n    return io();\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <Remote {...props} socket={getSocket()} />} />\n          <Route path=\"/app\" render={(props) => <Home {...props} socket={getSocket()} />} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nrender((\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}