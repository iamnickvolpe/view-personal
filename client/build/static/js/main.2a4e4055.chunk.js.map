{"version":3,"sources":["modules/Weather.js","modules/Time.js","modules/Calendar.js","modules/Feed.js","modules/Subway.js","App.js","serviceWorker.js","index.js"],"names":["Weather","state","weather","updated","icon","socket","io","window","location","hostname","that","this","on","data","setState","timestamp","body","currently","temperature","now","apparentTemperature","dailyData","_","isEmpty","Math","round","minutely","summary","daily","react_default","a","createElement","style","backgroundColor","props","color","backgroundImage","concat","className","temperatureHigh","temperatureLow","moment","unix","time","format","dist_default","fromNow","Component","Time","image","Calendar","calendar","calendarItems","items","todaysEvents","tomorrowsEvents","otherEvents","forEach","item","index","start","dateTime","friendlyTime","day","date","push","add","length","map","key","id","Feed","feed","console","log","createMarkup","bind","markup","__html","_this2","feedItems","react_slick_lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","autoplaySpeed","autoplay","visual","url","title","dangerouslySetInnerHTML","content","Subway","subway","stops","line","stop","station","updates","update","low","App","src_modules_Time","src_modules_Weather","src_modules_Calendar","src_modules_Feed","modules_Subway","Boolean","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a4e4055.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Weather.css';\nimport io from \"socket.io-client\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport Moment from \"react-moment\";\n\nclass Weather extends Component {\n    state = {\n        weather: {},\n        updated: \"\",\n        icon: \"\"\n    }\n    socket = io(window.location.hostname);\n\n    componentDidMount() {\n        var that = this;\n        this.socket.on(\"data\", function (data) {\n            if(data.weather) {\n                that.setState({ \n                    updated: data.weather.timestamp, \n                    icon: data.weather.body.currently.icon,\n                    weather: data.weather.body\n                });\n            }\n        });\n    }\n\n    render() {\n        var temperature = \"--\";\n        var now = \"--\"\n        var apparentTemperature = \"--\";\n        var dailyData = [];\n        if (!_.isEmpty(this.state.weather)) {\n            temperature = Math.round(this.state.weather.currently.temperature);\n            apparentTemperature = Math.round(this.state.weather.currently.apparentTemperature);\n            now = this.state.weather.minutely.summary;\n            dailyData = this.state.weather.daily.data;\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color, backgroundImage: `url(https://source.unsplash.com/1600x900/?${this.state.icon})` }} className=\"module\">\n                {!_.isEmpty(this.state.weather) ? (\n                    <div>\n                        <div className=\"now\">\n                            <div><span className=\"temperature\">{temperature}&deg;</span><span>Feels like {apparentTemperature}&deg;</span></div>\n                            <div className=\"summary\">{now}</div>\n                        </div>\n\n                        <div className=\"today\">\n                            <div className=\"today-header\">Today</div>\n                            <div className=\"today-temperature\">{Math.round(dailyData[0].temperatureHigh)}&deg;/{Math.round(dailyData[0].temperatureLow)}&deg;</div>\n                            <div className=\"today-summary\">{dailyData[0].summary}</div>\n                        </div>\n\n                        <div className=\"today\">\n                            <div className=\"today-header\">Tomorrow</div>\n                            <div className=\"today-temperature\">{Math.round(dailyData[1].temperatureHigh)}&deg;/{Math.round(dailyData[1].temperatureLow)}&deg;</div>\n                            <div className=\"today-summary\">{dailyData[1].summary}</div>\n                        </div>\n\n                        <div className=\"today\">\n                            <div className=\"today-header\">{moment.unix(dailyData[2].time).format(\"dddd\")}</div>\n                            <div className=\"today-temperature\">{Math.round(dailyData[2].temperatureHigh)}&deg;/{Math.round(dailyData[2].temperatureLow)}&deg;</div>\n                            <div className=\"today-summary\">{dailyData[2].summary}</div>\n                        </div>\n\n\n\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Weather;","import React, { Component } from 'react';\nimport Moment from \"react-moment\";\nimport './Time.css';\n\nclass Time extends Component {\n  render() {\n    return (\n      <div style={{backgroundImage: `url(${this.props.image})`, backgroundColor: this.props.color}} className=\"module\">\n        <div className=\"time\">\n          <Moment format=\"h:mm\" /><span className=\"ampm\"><Moment format=\"A\" /></span>\n        </div>\n        <div className=\"date\">\n          <Moment format=\"dddd, MMMM Do\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Time;","import React, { Component } from 'react';\nimport './Calendar.scss';\nimport io from \"socket.io-client\";\nimport _ from \"lodash\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nclass Calendar extends Component {\n    state = {\n        calendar: {},\n        updated: \"\"\n    }\n    socket = io(window.location.hostname);\n\n    componentDidMount() {\n        var that = this;\n        this.socket.on(\"data\", function (data) {\n            if (data[\"calendar-\" + that.props.calendar]) {\n                that.setState({\n                    calendar: data[\"calendar-\" + that.props.calendar].body,\n                    updated: data[\"calendar-\" + that.props.calendar].timestamp\n                });\n            }\n        });\n    }\n\n    render() {\n        if (!_.isEmpty(this.state.calendar)) {\n            var calendarItems = this.state.calendar.items;\n            var todaysEvents = [];\n            var tomorrowsEvents = [];\n            var otherEvents = [];\n            calendarItems.forEach(function (item, index) {\n                if (item.start.dateTime) {\n                    calendarItems[index].friendlyTime = moment(item.start.dateTime).format(\"h:mma\");\n                    calendarItems[index].day = moment(item.start.dateTime).format(\"YYYY-MM-DD\");\n                } else if (item.start.date) {\n                    calendarItems[index].friendlyTime = \"All day\";\n                    calendarItems[index].day = moment(item.start.date).format(\"YYYY-MM-DD\");\n                }\n                if (moment().format(\"YYYY-MM-DD\") === calendarItems[index].day) {\n                    todaysEvents.push(item);\n                } else if (moment().add(1, 'days').format(\"YYYY-MM-DD\") === calendarItems[index].day) {\n                    tomorrowsEvents.push(item);\n                } else {\n                    otherEvents.push(item);\n                }\n            });\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module calendar\">\n                {!_.isEmpty(this.state.calendar) ? (\n                    <div>\n                        <h1 className=\"calendar-name\">{this.state.calendar.summary}</h1>\n\n                        {todaysEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">Today</h2>\n                                {todaysEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\">{item.friendlyTime}</p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        {tomorrowsEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">Tomorrow</h2>\n                                {tomorrowsEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\">{item.friendlyTime}</p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        {otherEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">Future Events</h2>\n                                {otherEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\"><Moment format=\"M/D\">{item.day}</Moment></p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Calendar;","import React, { Component } from 'react';\nimport './Feed.scss';\nimport io from \"socket.io-client\";\nimport _ from \"lodash\";\nimport Slider from 'react-slick';\nimport Moment from 'react-moment';\n\nclass Feed extends Component {\n    state = {\n        feed: {},\n        updated: \"\"\n    }\n    socket = io(window.location.hostname);\n\n    componentDidMount() {\n        var that = this;\n        this.socket.on(\"data\", function (data) {\n            console.log(data)\n            if (data.feed) {\n                that.setState({\n                    updated: data.feed.timestamp,\n                    feed: data.feed.body\n                });\n            }\n        });\n        this.createMarkup = this.createMarkup.bind(this);\n    }\n\n    createMarkup(markup) {\n        return { __html: markup };\n    }\n\n    render() {\n        var feedItems = [];\n        var settings = {\n            dots: false,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            autoplaySpeed: 1000,\n            autoplay: true\n        };\n        if (!_.isEmpty(this.state.feed)) {\n            feedItems = this.state.feed.items;\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module feed\">\n                {!_.isEmpty(this.state.feed) ? (\n                    <div>\n                        <Slider {...settings}>\n                            {feedItems.map(item =>\n                                <div key={item.id}>\n                                    {item.visual && item.visual.url !== \"none\" ? (\n                                        <div className=\"image\" style={{ backgroundImage: `url(${item.visual.url})` }}></div>\n                                    ) : (null)}\n                                    <div className=\"content\">\n                                        <h1 className=\"title\">{item.title}</h1>\n                                        <p className=\"summary\" dangerouslySetInnerHTML={this.createMarkup(item.summary?(item.summary.content):(item.content.content))}></p>\n                                    </div>\n                                </div>\n                            )}\n                        </Slider>\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Feed;","import React, { Component } from 'react';\nimport './Calendar.scss';\nimport io from \"socket.io-client\";\nimport _ from \"lodash\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nclass Subway extends Component {\n    state = {\n        subway: {},\n        updated: \"\"\n    }\n    socket = io(window.location.hostname);\n\n    componentDidMount() {\n        var that = this;\n        this.socket.on(\"data\", function (data) {\n            if (data.subway) {\n                that.setState({\n                    subway: data.subway.body,\n                    updated: data.subway.timestamp\n                });\n            }\n        });\n    }\n\n    render() {\n        if (!_.isEmpty(this.state.subway)) {\n            var subway = this.state.subway;\n            var stops = [];\n            subway.forEach(function (line) {\n                line.stops.forEach(function (stop) {\n                    stops.push(stop);\n                })\n            });\n            console.log(stops)\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module subway\">\n                {!_.isEmpty(this.state.subway) ? (\n                    <div>\n                        {stops.map(stop =>\n                            <div>\n                                <div>{stop.station}</div>\n                                {stop.updates.map(update =>\n                                    <div>{moment(update.time.low * 1000).fromNow()}</div>\n                                )}\n                            </div>\n                        )}\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Subway;","import React, { Component } from 'react';\nimport 'normalize.css';\nimport './App.scss';\nimport Weather from './modules/Weather.js';\nimport Time from './modules/Time.js';\nimport Calendar from './modules/Calendar.js';\nimport Feed from './modules/Feed.js';\nimport Subway from './modules/Subway.js';\n//import TimeImage from './images/gallivantinglife-1150870-unsplash.jpg'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Time /*image={TimeImage}*/ color=\"#313131\" />\n        <Weather color=\"white\" />\n        <Calendar color=\"#F6A44D\" calendar=\"nick@iamnickvolpe.com\" />\n        <Calendar color=\"#F86A68\" calendar=\"7afrbvotf8p1qcjcpbqp2639as@group.calendar.google.com\" />\n        <Calendar color=\"#AC79CA\" calendar=\"jenn.sager@gmail.com\" />\n        <Feed color=\"white\" />\n        <Subway color=\"#313131\" />\n        <div className=\"module\"></div>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}