{"version":3,"sources":["modules/Weather.js","modules/Time.js","modules/Calendar.js","modules/Feed.js","modules/Subway.js","modules/Home.js","modules/Remote.js","App.js","serviceWorker.js","index.js"],"names":["Weather","state","weather","updated","icon","that","this","props","socket","on","data","setState","timestamp","body","currently","temperature","now","apparentTemperature","dailyData","_","isEmpty","Math","round","minutely","summary","daily","react_default","a","createElement","style","backgroundColor","color","className","temperatureHigh","temperatureLow","moment","unix","time","format","dist_default","fromNow","Component","Time","backgroundImage","concat","image","Calendar","calendar","calendarItems","items","todaysEvents","tomorrowsEvents","otherEvents","forEach","item","index","start","dateTime","friendlyTime","day","date","push","add","length","map","key","id","Feed","feed","createMarkup","bind","markup","__html","_this2","feedItems","lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","autoplaySpeed","autoplay","visual","url","title","published","dangerouslySetInnerHTML","content","Subway","subway","stops","line","stop","updates","station","update","low","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","background","opacity","src_modules_Time","src_modules_Calendar","src_modules_Weather","src_modules_Subway","src_modules_Feed","Remote","value","changeImage","assertThisInitialized","changeOpacity","handleChange","fetch","credentials","headers","Content-Type","method","JSON","stringify","q","then","response","console","log","catch","error","event","target","type","placeholder","onChange","onClick","App","io","Switch","Route","exact","path","render","modules_Remote","assign","src_modules_Home","Boolean","window","location","hostname","match","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wPAuEeA,6MAhEXC,MAAQ,CACJC,QAAS,GACTC,QAAS,GACTC,KAAM,uFAIN,IAAIC,EAAOC,KACXA,KAAKC,MAAMC,OAAOC,GAAG,OAAQ,SAAUC,GAChCA,EAAKR,SACJG,EAAKM,SAAS,CACVR,QAASO,EAAKR,QAAQU,UACtBR,KAAMM,EAAKR,QAAQW,KAAKC,UAAUV,KAClCF,QAASQ,EAAKR,QAAQW,0CAOlC,IAAIE,EAAc,KACdC,EAAM,KACNC,EAAsB,KACtBC,EAAY,GAOhB,OANKC,IAAEC,QAAQd,KAAKL,MAAMC,WACtBa,EAAcM,KAAKC,MAAMhB,KAAKL,MAAMC,QAAQY,UAAUC,aACtDE,EAAsBI,KAAKC,MAAMhB,KAAKL,MAAMC,QAAQY,UAAUG,qBAC9DD,EAAMV,KAAKL,MAAMC,QAAQqB,SAASC,QAClCN,EAAYZ,KAAKL,MAAMC,QAAQuB,MAAMf,MAGrCgB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,gBAAiBxB,KAAKC,MAAMwB,OAASC,UAAU,kBACvDb,IAAEC,QAAQd,KAAKL,MAAMC,SA0BnBwB,EAAAC,EAAAC,cAAA,sBAzBAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,QAAMI,UAAU,eAAejB,EAA/B,QAAuDW,EAAAC,EAAAC,cAAA,0BAAkBX,EAAlB,SAC5DS,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WAAWhB,IAG9BU,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAd,UAAmCX,KAAKC,MAAMJ,EAAU,GAAGe,iBAA3D,SAAoFZ,KAAKC,MAAMJ,EAAU,GAAGgB,gBAA5G,QACAR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAAed,EAAU,GAAGM,UAG/CE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAd,aAAsCX,KAAKC,MAAMJ,EAAU,GAAGe,iBAA9D,SAAuFZ,KAAKC,MAAMJ,EAAU,GAAGgB,gBAA/G,QACAR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAAed,EAAU,GAAGM,UAG/CE,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAcG,IAAOC,KAAKlB,EAAU,GAAGmB,MAAMC,OAAO,QAAlE,KAA6EjB,KAAKC,MAAMJ,EAAU,GAAGe,iBAArG,SAA8HZ,KAAKC,MAAMJ,EAAU,GAAGgB,gBAAtJ,QACAR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,eAAed,EAAU,GAAGM,UAK/CE,EAAAC,EAAAC,cAAA,KAAGI,UAAU,WAAUN,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQa,SAAO,GAAElC,KAAKL,MAAME,mBAzDrDsC,aCePC,0LAfX,OACEhB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEc,gBAAe,OAAAC,OAAStC,KAAKC,MAAMsC,MAApB,KAA8Bf,gBAAiBxB,KAAKC,MAAMwB,OAASC,UAAU,eACxGN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACbN,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQW,OAAO,SAASZ,EAAAC,EAAAC,cAAA,QAAMI,UAAU,QAAON,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQW,OAAO,QAEhEZ,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QACbN,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQW,OAAO,4BATRG,cC8FJK,oNA3FX7C,MAAQ,CACJ8C,SAAU,GACV5C,QAAS,uFAIT,IAAIE,EAAOC,KACXA,KAAKC,MAAMC,OAAOC,GAAG,OAAQ,SAAUC,GAC/BA,EAAK,YAAcL,EAAKE,MAAMwC,WAC9B1C,EAAKM,SAAS,CACVoC,SAAUrC,EAAK,YAAcL,EAAKE,MAAMwC,UAAUlC,KAClDV,QAASO,EAAK,YAAcL,EAAKE,MAAMwC,UAAUnC,+CAO7D,IAAKO,IAAEC,QAAQd,KAAKL,MAAM8C,UAAW,CACjC,IAAIC,EAAgB1C,KAAKL,MAAM8C,SAASE,MACpCC,EAAe,GACfC,EAAkB,GAClBC,EAAc,GAClBJ,EAAcK,QAAQ,SAAUC,EAAMC,GAC9BD,EAAKE,MAAMC,UACXT,EAAcO,GAAOG,aAAevB,IAAOmB,EAAKE,MAAMC,UAAUnB,OAAO,SACvEU,EAAcO,GAAOI,IAAMxB,IAAOmB,EAAKE,MAAMC,UAAUnB,OAAO,eACvDgB,EAAKE,MAAMI,OAClBZ,EAAcO,GAAOG,aAAe,UACpCV,EAAcO,GAAOI,IAAMxB,IAAOmB,EAAKE,MAAMI,MAAMtB,OAAO,eAE1DH,MAASG,OAAO,gBAAkBU,EAAcO,GAAOI,IACvDT,EAAaW,KAAKP,GACXnB,MAAS2B,IAAI,EAAG,QAAQxB,OAAO,gBAAkBU,EAAcO,GAAOI,IAC7ER,EAAgBU,KAAKP,GAErBF,EAAYS,KAAKP,KAI7B,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,gBAAiBxB,KAAKC,MAAMwB,OAASC,UAAU,mBACvDb,IAAEC,QAAQd,KAAKL,MAAM8C,UA2CnBrB,EAAAC,EAAAC,cAAA,sBA1CAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAII,UAAU,iBAAiB1B,KAAKL,MAAM8C,SAASvB,SAElD0B,EAAaa,OACVrC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAd,SACCkB,EAAac,IAAI,SAAAV,GAAI,OAClB5B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QAAQiC,IAAKX,EAAKY,IAC7BxC,EAAAC,EAAAC,cAAA,KAAGI,UAAU,QAAQsB,EAAKI,cAD9B,IACgDhC,EAAAC,EAAAC,cAAA,KAAGI,UAAU,WAAWsB,EAAK9B,aAIrF,KAEH2B,EAAgBY,OACbrC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAd,YACCmB,EAAgBa,IAAI,SAAAV,GAAI,OACrB5B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QAAQiC,IAAKX,EAAKY,IAC7BxC,EAAAC,EAAAC,cAAA,KAAGI,UAAU,QAAQsB,EAAKI,cAD9B,IACgDhC,EAAAC,EAAAC,cAAA,KAAGI,UAAU,WAAWsB,EAAK9B,aAIrF,KAEH4B,EAAYW,OACTrC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAd,oBACCoB,EAAYY,IAAI,SAAAV,GAAI,OACjB5B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QAAQiC,IAAKX,EAAKY,IAC7BxC,EAAAC,EAAAC,cAAA,KAAGI,UAAU,QAAON,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQW,OAAO,OAAOgB,EAAKK,MADnD,IACqEjC,EAAAC,EAAAC,cAAA,KAAGI,UAAU,WAAWsB,EAAK9B,aAI1G,KAEFwB,EAAce,OAEb,KADCrC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QAAf,aAGJN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,WAAUN,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQa,SAAO,GAAElC,KAAKL,MAAME,mBApFpDsC,uCC+DR0B,6MA9DXlE,MAAQ,CACJmE,KAAM,GACNjE,QAAS,uFAIT,IAAIE,EAAOC,KACXA,KAAKC,MAAMC,OAAOC,GAAG,OAAQ,SAAUC,GAC/BA,EAAK0D,MACL/D,EAAKM,SAAS,CACVR,QAASO,EAAK0D,KAAKxD,UACnBwD,KAAM1D,EAAK0D,KAAKvD,SAI5BP,KAAK+D,aAAe/D,KAAK+D,aAAaC,KAAKhE,2CAGlCiE,GACT,MAAO,CAAEC,OAAQD,oCAGZ,IAAAE,EAAAnE,KACDoE,EAAY,GAahB,OAHKvD,IAAEC,QAAQd,KAAKL,MAAMmE,QACtBM,EAAYpE,KAAKL,MAAMmE,KAAKnB,OAG5BvB,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,gBAAiBxB,KAAKC,MAAMwB,OAASC,UAAU,eACvDb,IAAEC,QAAQd,KAAKL,MAAMmE,MAkBnB1C,EAAAC,EAAAC,cAAA,sBAjBAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+C,EAAAhD,EAhBF,CACXiD,MAAM,EACNC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,cAAe,IACfC,UAAU,GAUOR,EAAUV,IAAI,SAAAV,GAAI,OACf5B,EAAAC,EAAAC,cAAA,OAAKqC,IAAKX,EAAKY,IACVZ,EAAK6B,QAA8B,SAApB7B,EAAK6B,OAAOC,IACxB1D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QAAQH,MAAO,CAAEc,gBAAe,OAAAC,OAASU,EAAK6B,OAAOC,IAArB,QAC9C,KACL1D,EAAAC,EAAAC,cAAA,OAAKI,UAAU,WACXN,EAAAC,EAAAC,cAAA,MAAII,UAAU,SAASsB,EAAK+B,OAC5B3D,EAAAC,EAAAC,cAAA,KAAGI,UAAU,aAAYN,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQa,SAAO,GAAEc,EAAKgC,YAC/C5D,EAAAC,EAAAC,cAAA,KAAGI,UAAU,UAAUuD,wBAAyBd,EAAKJ,aAAaf,EAAK9B,QAAS8B,EAAK9B,QAAQgE,QAAUlC,EAAKkC,QAAQA,gBAKpI9D,EAAAC,EAAAC,cAAA,KAAGI,UAAU,WAAUN,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQa,SAAO,GAAElC,KAAKL,MAAME,mBAvDxDsC,aC8DJgD,oNA7DXxF,MAAQ,CACJyF,OAAQ,GACRvF,QAAS,uFAIT,IAAIE,EAAOC,KACXA,KAAKC,MAAMC,OAAOC,GAAG,OAAQ,SAAUC,GAC/BA,EAAKgF,QACLrF,EAAKM,SAAS,CACV+E,OAAQhF,EAAKgF,OAAO7E,KACpBV,QAASO,EAAKgF,OAAO9E,+CAOjC,IAAKO,IAAEC,QAAQd,KAAKL,MAAMyF,QAAS,CAC/B,IAAIA,EAASpF,KAAKL,MAAMyF,OACpBC,EAAQ,GACZD,EAAOrC,QAAQ,SAAUuC,GACrBA,EAAKD,MAAMtC,QAAQ,SAAUwC,GACrBA,EAAKC,QAAQ/B,OAAS,IACtB8B,EAAKC,QAAQ/B,OAAS,GAE1B4B,EAAM9B,KAAKgC,OAIvB,OACInE,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,gBAAiBxB,KAAKC,MAAMwB,OAASC,UAAU,iBACvDb,IAAEC,QAAQd,KAAKL,MAAMyF,QAuBnBhE,EAAAC,EAAAC,cAAA,sBAtBAF,EAAAC,EAAAC,cAAA,WACK+D,EAAM3B,IAAI,SAAC6B,EAAMtC,GAAP,OACP7B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,OAAOiC,IAAKV,GACvB7B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAW,QAAU6D,EAAKD,MAAOC,EAAKD,OAG/ClE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAII,UAAU,cAAc6D,EAAKE,SAChCF,EAAKC,QAAQ9B,IAAI,SAACgC,EAAQzC,GAAT,OACd7B,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SAASiC,IAAKV,GACxBpB,IAAyB,IAAlB6D,EAAO3D,KAAK4D,KAAYzD,aAGtCqD,EAAKC,QAAQ/B,OAEX,KADArC,EAAAC,EAAAC,cAAA,OAAKI,UAAU,UAAf,iBAKhBN,EAAAC,EAAAC,cAAA,KAAGI,UAAU,WAAUN,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQa,SAAO,GAAElC,KAAKL,MAAME,mBAtDtDsC,cCyCNyD,cAtCX,SAAAA,EAAY3F,GAAO,IAAA4F,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9F,KAAA4F,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAA9F,KAAA8F,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAlG,KAAMC,KACDN,MAAQ,CACTwG,WAAY,GACZC,QAAS,IAJEP,mFASf,IAAI9F,EAAOC,KACXA,KAAKC,MAAMC,OAAOC,GAAG,UAAW,SAAUC,GAClCA,EAAK+F,YACLpG,EAAKM,SAAS,CAAE8F,WAAY/F,EAAK+F,aAEjC/F,EAAKgG,SACLrG,EAAKM,SAAS,CAAE+F,QAAShG,EAAKgG,6CAMtC,OACIhF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QAAQH,MAAO,CAAEc,gBAAe,OAAAC,OAAStC,KAAKL,MAAMwG,WAApB,OAC3C/E,EAAAC,EAAAC,cAAC+E,EAAD,CAAM5E,MAAM,wBACZL,EAAAC,EAAAC,cAACgF,EAAD,CAAUpG,OAAQF,KAAKC,MAAMC,OAAQuB,MAAM,qBAAqBgB,SAAS,yDACzErB,EAAAC,EAAAC,cAACgF,EAAD,CAAUpG,OAAQF,KAAKC,MAAMC,OAAQuB,MAAM,oBAAoBgB,SAAS,2BACxErB,EAAAC,EAAAC,cAACgF,EAAD,CAAUpG,OAAQF,KAAKC,MAAMC,OAAQuB,MAAM,qBAAqBgB,SAAS,yBACzErB,EAAAC,EAAAC,cAACiF,EAAD,CAASrG,OAAQF,KAAKC,MAAMC,OAAQuB,MAAM,wBAC1CL,EAAAC,EAAAC,cAACkF,EAAD,CAAQtG,OAAQF,KAAKC,MAAMC,OAAQuB,MAAM,wBACzCL,EAAAC,EAAAC,cAACmF,EAAD,CAAMvG,OAAQF,KAAKC,MAAMC,OAAQuB,MAAM,WAE3CL,EAAAC,EAAAC,cAAA,OAAKI,UAAU,QAAQH,MAAO,CAAE6E,QAASpG,KAAKL,MAAMyG,mBAjCjDjE,qBCwDJuE,cA7DX,SAAAA,EAAYzG,GAAO,IAAA4F,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAA9F,KAAA0G,IACfb,EAAAC,OAAAE,EAAA,EAAAF,CAAA9F,KAAA8F,OAAAG,EAAA,EAAAH,CAAAY,GAAAR,KAAAlG,KAAMC,KACDN,MAAQ,CACTgH,MAAO,IAEXd,EAAKe,YAAcf,EAAKe,YAAY5C,KAAjB8B,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACnBA,EAAKiB,cAAgBjB,EAAKiB,cAAc9C,KAAnB8B,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KACrBA,EAAKkB,aAAelB,EAAKkB,aAAa/C,KAAlB8B,OAAAe,EAAA,EAAAf,QAAAe,EAAA,EAAAf,CAAAD,KAPLA,6EAWfmB,MACI,4BAA6B,CACzBC,YAAa,cACbC,QAAS,CAAEC,eAAgB,oBAC3BC,OAAQ,OACR7G,KAAM8G,KAAKC,UAAU,CAACC,EAAGvH,KAAKL,MAAMgH,UAE1Ca,KAAK,SAASC,GACZC,QAAQC,IAAIF,KACbG,MAAM,SAAUC,GACfH,QAAQC,IAAIE,2CAINzB,GACVY,MACI,eAAgB,CACZC,YAAa,cACbC,QAAS,CAAEC,eAAgB,oBAC3BC,OAAQ,OACR7G,KAAM8G,KAAKC,UAAU,CAAClB,QAASA,MAErCoB,KAAK,SAASC,GACZC,QAAQC,IAAIF,KACbG,MAAM,SAAUC,GACfH,QAAQC,IAAIE,0CAIPC,GACT9H,KAAKK,SAAS,CAACsG,MAAOmB,EAAMC,OAAOpB,yCAG9B,IAAAxC,EAAAnE,KACL,OACIoB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAO0G,KAAK,OAAOC,YAAY,mBAAmBtB,MAAO3G,KAAKL,MAAMgH,MAAOuB,SAAUlI,KAAK+G,eAC1F3F,EAAAC,EAAAC,cAAA,UAAQ6G,QAASnI,KAAK4G,aAAtB,iBAEJxF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQ6G,QAAS,kBAAMhE,EAAK2C,cAAc,OAA1C,QACA1F,EAAAC,EAAAC,cAAA,UAAQ6G,QAAS,kBAAMhE,EAAK2C,cAAc,QAA1C,OACA1F,EAAAC,EAAAC,cAAA,UAAQ6G,QAAS,kBAAMhE,EAAK2C,cAAc,OAA1C,eAvDC3E,gDCyBNiG,mLAjBX,IAAIlI,EAMJ,OAFEA,EAASmI,MAGTjH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgH,EAAA,EAAD,KACElH,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAACzI,GAAD,OAAWmB,EAAAC,EAAAC,cAACqH,EAAD7C,OAAA8C,OAAA,GAAY3I,EAAZ,CAAmBC,OAAQA,QACpEkB,EAAAC,EAAAC,cAACiH,EAAA,EAAD,CAAOE,KAAK,OAAOC,OAAQ,SAACzI,GAAD,OAAWmB,EAAAC,EAAAC,cAACuH,EAAD/C,OAAA8C,OAAA,GAAU3I,EAAV,CAAiBC,OAAQA,iBAZvDiC,aCIE2G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,gFCZNR,iBACItH,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACI/H,EAAAC,EAAAC,cAAC8H,EAAD,OAELC,SAASC,eAAe,SDuHrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjC,KAAK,SAAAkC,GACjCA,EAAaC","file":"static/js/main.841e9034.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Weather.scss';\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport Moment from \"react-moment\";\n\nclass Weather extends Component {\n    state = {\n        weather: {},\n        updated: \"\",\n        icon: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if(data.weather) {\n                that.setState({ \n                    updated: data.weather.timestamp, \n                    icon: data.weather.body.currently.icon,\n                    weather: data.weather.body\n                });\n            }\n        });\n    }\n\n    render() {\n        var temperature = \"--\";\n        var now = \"--\"\n        var apparentTemperature = \"--\";\n        var dailyData = [];\n        if (!_.isEmpty(this.state.weather)) {\n            temperature = Math.round(this.state.weather.currently.temperature);\n            apparentTemperature = Math.round(this.state.weather.currently.apparentTemperature);\n            now = this.state.weather.minutely.summary;\n            dailyData = this.state.weather.daily.data;\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"weather module\">\n                {!_.isEmpty(this.state.weather) ? (\n                    <div>\n                        <div className=\"now\">\n                            <div><span className=\"temperature\">{temperature}&deg;</span><span>Feels like {apparentTemperature}&deg;</span></div>\n                            <div className=\"summary\">{now}</div>\n                        </div>\n\n                        <div className=\"day\">\n                            <h2 className=\"group-name\">Today H{Math.round(dailyData[0].temperatureHigh)}&deg; L{Math.round(dailyData[0].temperatureLow)}&deg;</h2>\n                            <div className=\"day-summary\">{dailyData[0].summary}</div>\n                        </div>\n\n                        <div className=\"day\">\n                            <h2 className=\"group-name\">Tomorrow H{Math.round(dailyData[1].temperatureHigh)}&deg; L{Math.round(dailyData[1].temperatureLow)}&deg;</h2>\n                            <div className=\"day-summary\">{dailyData[1].summary}</div>\n                        </div>\n\n                        <div className=\"day\">\n                            <h2 className=\"group-name\">{moment.unix(dailyData[2].time).format(\"dddd\")} H{Math.round(dailyData[2].temperatureHigh)}&deg; L{Math.round(dailyData[2].temperatureLow)}&deg;</h2>\n                            <div className=\"day-summary\">{dailyData[2].summary}</div>\n                        </div>\n\n\n\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Weather;","import React, { Component } from 'react';\nimport Moment from \"react-moment\";\nimport './Time.scss';\n\nclass Time extends Component {\n  render() {\n    return (\n      <div style={{ backgroundImage: `url(${this.props.image})`, backgroundColor: this.props.color }} className=\"module time\">\n        <div className=\"content\">\n          <div className=\"time\">\n            <Moment format=\"h:mm\" /><span className=\"ampm\"><Moment format=\"A\" /></span>\n          </div>\n          <div className=\"date\">\n            <Moment format=\"dddd, MMMM Do\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Time;","import React, { Component } from 'react';\nimport './Calendar.scss';\nimport _ from \"lodash\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nclass Calendar extends Component {\n    state = {\n        calendar: {},\n        updated: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if (data[\"calendar-\" + that.props.calendar]) {\n                that.setState({\n                    calendar: data[\"calendar-\" + that.props.calendar].body,\n                    updated: data[\"calendar-\" + that.props.calendar].timestamp\n                });\n            }\n        });\n    }\n\n    render() {\n        if (!_.isEmpty(this.state.calendar)) {\n            var calendarItems = this.state.calendar.items;\n            var todaysEvents = [];\n            var tomorrowsEvents = [];\n            var otherEvents = [];\n            calendarItems.forEach(function (item, index) {\n                if (item.start.dateTime) {\n                    calendarItems[index].friendlyTime = moment(item.start.dateTime).format(\"h:mma\");\n                    calendarItems[index].day = moment(item.start.dateTime).format(\"YYYY-MM-DD\");\n                } else if (item.start.date) {\n                    calendarItems[index].friendlyTime = \"All day\";\n                    calendarItems[index].day = moment(item.start.date).format(\"YYYY-MM-DD\");\n                }\n                if (moment().format(\"YYYY-MM-DD\") === calendarItems[index].day) {\n                    todaysEvents.push(item);\n                } else if (moment().add(1, 'days').format(\"YYYY-MM-DD\") === calendarItems[index].day) {\n                    tomorrowsEvents.push(item);\n                } else {\n                    otherEvents.push(item);\n                }\n            });\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module calendar\">\n                {!_.isEmpty(this.state.calendar) ? (\n                    <div>\n                        <h1 className=\"calendar-name\">{this.state.calendar.summary}</h1>\n\n                        {todaysEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">Today</h2>\n                                {todaysEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\">{item.friendlyTime}</p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        {tomorrowsEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">Tomorrow</h2>\n                                {tomorrowsEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\">{item.friendlyTime}</p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        {otherEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">2+ Days From Now</h2>\n                                {otherEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\"><Moment format=\"M/D\">{item.day}</Moment></p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        {!calendarItems.length ? (\n                            <div className=\"none\">No events</div>\n                        ): null}\n\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Calendar;","import React, { Component } from 'react';\nimport './Feed.scss';\nimport _ from \"lodash\";\nimport Slider from 'react-slick';\nimport Moment from 'react-moment';\n\nclass Feed extends Component {\n    state = {\n        feed: {},\n        updated: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if (data.feed) {\n                that.setState({\n                    updated: data.feed.timestamp,\n                    feed: data.feed.body\n                });\n            }\n        });\n        this.createMarkup = this.createMarkup.bind(this);\n    }\n\n    createMarkup(markup) {\n        return { __html: markup };\n    }\n\n    render() {\n        var feedItems = [];\n        var settings = {\n            dots: false,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            autoplaySpeed: 20000,\n            autoplay: true\n        };\n        if (!_.isEmpty(this.state.feed)) {\n            feedItems = this.state.feed.items;\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module feed\">\n                {!_.isEmpty(this.state.feed) ? (\n                    <div>\n                        <Slider {...settings}>\n                            {feedItems.map(item =>\n                                <div key={item.id}>\n                                    {item.visual && item.visual.url !== \"none\" ? (\n                                        <div className=\"image\" style={{ backgroundImage: `url(${item.visual.url})` }}></div>\n                                    ) : (null)}\n                                    <div className=\"content\">\n                                        <h1 className=\"title\">{item.title}</h1>\n                                        <p className=\"published\"><Moment fromNow>{item.published}</Moment></p>\n                                        <p className=\"summary\" dangerouslySetInnerHTML={this.createMarkup(item.summary?(item.summary.content):(item.content.content))}></p>\n                                    </div>\n                                </div>\n                            )}\n                        </Slider>\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Feed;","import React, { Component } from 'react';\nimport './Subway.scss';\nimport _ from \"lodash\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nclass Subway extends Component {\n    state = {\n        subway: {},\n        updated: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if (data.subway) {\n                that.setState({\n                    subway: data.subway.body,\n                    updated: data.subway.timestamp\n                });\n            }\n        });\n    }\n\n    render() {\n        if (!_.isEmpty(this.state.subway)) {\n            var subway = this.state.subway;\n            var stops = [];\n            subway.forEach(function (line) {\n                line.stops.forEach(function (stop) {\n                    if (stop.updates.length > 3) {\n                        stop.updates.length = 3;\n                    }\n                    stops.push(stop);\n                });\n            });\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module subway\">\n                {!_.isEmpty(this.state.subway) ? (\n                    <div>\n                        {stops.map((stop, index) =>\n                            <div className=\"stop\" key={index}>\n                                <div>\n                                    <div className={\"line-\" + stop.line}>{stop.line}</div>\n                                </div>\n\n                                <div>\n                                    <h2 className=\"group-name\">{stop.station}</h2>\n                                    {stop.updates.map((update, index) =>\n                                        <div className=\"update\" key={index}>\n                                            {moment(update.time.low * 1000).fromNow()}\n                                        </div>\n                                    )}\n                                    {!stop.updates.length ? (\n                                        <div className=\"update\">No trains</div>\n                                    ) : null}\n                                </div>\n                            </div>\n                        )}\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Subway;","import React, { Component } from 'react';\nimport './Home.scss';\nimport Weather from './Weather.js';\nimport Time from './Time.js';\nimport Calendar from './Calendar.js';\nimport Feed from './Feed.js';\nimport Subway from './Subway.js';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            background: \"\",\n            opacity: \"\"\n        }\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"display\", function (data) {\n            if (data.background) {\n                that.setState({ background: data.background });\n            }\n            if (data.opacity) {\n                that.setState({ opacity: data.opacity });\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"cards\" style={{ backgroundImage: `url(${this.state.background})` }}>\n                    <Time color=\"rgba(0, 0, 0, 0.25)\" />\n                    <Calendar socket={this.props.socket} color=\"rgb(121, 112, 255)\" calendar=\"7afrbvotf8p1qcjcpbqp2639as@group.calendar.google.com\" />\n                    <Calendar socket={this.props.socket} color=\"rgb(253, 147, 72)\" calendar=\"iamnickvolpe@gmail.com\" />\n                    <Calendar socket={this.props.socket} color=\"rgb(210, 102, 255)\" calendar=\"jenn.sager@gmail.com\" />\n                    <Weather socket={this.props.socket} color=\"rgba(0, 0, 0, 0.25)\" />\n                    <Subway socket={this.props.socket} color=\"rgba(0, 0, 0, 0.25)\" />\n                    <Feed socket={this.props.socket} color=\"white\" />\n                </div>\n                <div className=\"cover\" style={{ opacity: this.state.opacity }}></div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nclass Remote extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\"\n        }\n        this.changeImage = this.changeImage.bind(this);\n        this.changeOpacity = this.changeOpacity.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    changeImage() {\n        fetch(\n            \"/api/randomize-background\", {\n                credentials: \"same-origin\",\n                headers: { \"Content-Type\": \"application/json\" },\n                method: \"POST\",\n                body: JSON.stringify({q: this.state.value})\n            }\n        ).then(function(response) {\n            console.log(response);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    changeOpacity(opacity) {\n        fetch(\n            \"/api/display\", {\n                credentials: \"same-origin\",\n                headers: { \"Content-Type\": \"application/json\" },\n                method: \"POST\",\n                body: JSON.stringify({opacity: opacity})\n            }\n        ).then(function(response) {\n            console.log(response);\n        }).catch(function (error) {\n            console.log(error);\n        });\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n      }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <input type=\"text\" placeholder=\"Search Images...\" value={this.state.value} onChange={this.handleChange} />\n                    <button onClick={this.changeImage}>Change Image</button>\n                </div>\n                <div>\n                    <button onClick={() => this.changeOpacity(\"0\")}>100%</button>\n                    <button onClick={() => this.changeOpacity(\".5\")}>50%</button>\n                    <button onClick={() => this.changeOpacity(\"1\")}>0%</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Remote;","import React, { Component } from 'react';\nimport 'normalize.css';\nimport './App.scss';\nimport Home from './modules/Home.js';\nimport Remote from './modules/Remote.js'\nimport { Route, Switch } from 'react-router-dom';\nimport io from \"socket.io-client\";\n\nclass App extends Component {\n  render() {\n    let socket;\n    if (process.env.NODE_ENV === \"development\") {\n      socket = io(\"localhost:3000\");\n    } else {\n      socket = io();\n    }\n    return (\n      <div>\n        <Switch>\n          <Route exact path=\"/\" render={(props) => <Remote {...props} socket={socket} />} />\n          <Route path=\"/app\" render={(props) => <Home {...props} socket={socket} />} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nrender((\n    <BrowserRouter>\n        <App/>\n    </BrowserRouter>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}