{"version":3,"sources":["modules/Weather.js","modules/Time.js","modules/Calendar.js","modules/Feed.js","modules/Subway.js","App.js","serviceWorker.js","index.js","images/gallivantinglife-1150870-unsplash.jpg"],"names":["Weather","state","weather","updated","icon","that","this","props","socket","on","data","setState","timestamp","body","currently","temperature","now","apparentTemperature","dailyData","_","isEmpty","Math","round","minutely","summary","daily","react_default","a","createElement","style","backgroundColor","color","backgroundImage","concat","className","temperatureHigh","temperatureLow","moment","unix","time","format","dist_default","fromNow","Component","Time","image","Calendar","calendar","calendarItems","items","todaysEvents","tomorrowsEvents","otherEvents","forEach","item","index","start","dateTime","friendlyTime","day","date","push","add","length","map","key","id","Feed","feed","createMarkup","bind","markup","__html","_this2","feedItems","lib_default","dots","infinite","speed","slidesToShow","slidesToScroll","autoplaySpeed","autoplay","visual","url","title","dangerouslySetInnerHTML","content","Subway","subway","stops","line","stop","station","updates","update","low","App","io","window","location","hostname","src_modules_Time","TimeImage","src_modules_Weather","src_modules_Calendar","src_modules_Feed","modules_Subway","Boolean","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.954fe6c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Weather.css';\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport Moment from \"react-moment\";\n\nclass Weather extends Component {\n    state = {\n        weather: {},\n        updated: \"\",\n        icon: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if(data.weather) {\n                that.setState({ \n                    updated: data.weather.timestamp, \n                    icon: data.weather.body.currently.icon,\n                    weather: data.weather.body\n                });\n            }\n        });\n    }\n\n    render() {\n        var temperature = \"--\";\n        var now = \"--\"\n        var apparentTemperature = \"--\";\n        var dailyData = [];\n        if (!_.isEmpty(this.state.weather)) {\n            temperature = Math.round(this.state.weather.currently.temperature);\n            apparentTemperature = Math.round(this.state.weather.currently.apparentTemperature);\n            now = this.state.weather.minutely.summary;\n            dailyData = this.state.weather.daily.data;\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color, backgroundImage: `url(https://source.unsplash.com/1600x900/?${this.state.icon})` }} className=\"module\">\n                {!_.isEmpty(this.state.weather) ? (\n                    <div>\n                        <div className=\"now\">\n                            <div><span className=\"temperature\">{temperature}&deg;</span><span>Feels like {apparentTemperature}&deg;</span></div>\n                            <div className=\"summary\">{now}</div>\n                        </div>\n\n                        <div className=\"today\">\n                            <div className=\"today-header\">Today</div>\n                            <div className=\"today-temperature\">{Math.round(dailyData[0].temperatureHigh)}&deg;/{Math.round(dailyData[0].temperatureLow)}&deg;</div>\n                            <div className=\"today-summary\">{dailyData[0].summary}</div>\n                        </div>\n\n                        <div className=\"today\">\n                            <div className=\"today-header\">Tomorrow</div>\n                            <div className=\"today-temperature\">{Math.round(dailyData[1].temperatureHigh)}&deg;/{Math.round(dailyData[1].temperatureLow)}&deg;</div>\n                            <div className=\"today-summary\">{dailyData[1].summary}</div>\n                        </div>\n\n                        <div className=\"today\">\n                            <div className=\"today-header\">{moment.unix(dailyData[2].time).format(\"dddd\")}</div>\n                            <div className=\"today-temperature\">{Math.round(dailyData[2].temperatureHigh)}&deg;/{Math.round(dailyData[2].temperatureLow)}&deg;</div>\n                            <div className=\"today-summary\">{dailyData[2].summary}</div>\n                        </div>\n\n\n\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Weather;","import React, { Component } from 'react';\nimport Moment from \"react-moment\";\nimport './Time.css';\n\nclass Time extends Component {\n  render() {\n    return (\n      <div style={{backgroundImage: `url(${this.props.image})`, backgroundColor: this.props.color}} className=\"module\">\n        <div className=\"time\">\n          <Moment format=\"h:mm\" /><span className=\"ampm\"><Moment format=\"A\" /></span>\n        </div>\n        <div className=\"date\">\n          <Moment format=\"dddd, MMMM Do\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Time;","import React, { Component } from 'react';\nimport './Calendar.scss';\nimport _ from \"lodash\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nclass Calendar extends Component {\n    state = {\n        calendar: {},\n        updated: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if (data[\"calendar-\" + that.props.calendar]) {\n                that.setState({\n                    calendar: data[\"calendar-\" + that.props.calendar].body,\n                    updated: data[\"calendar-\" + that.props.calendar].timestamp\n                });\n            }\n        });\n    }\n\n    render() {\n        if (!_.isEmpty(this.state.calendar)) {\n            var calendarItems = this.state.calendar.items;\n            var todaysEvents = [];\n            var tomorrowsEvents = [];\n            var otherEvents = [];\n            calendarItems.forEach(function (item, index) {\n                if (item.start.dateTime) {\n                    calendarItems[index].friendlyTime = moment(item.start.dateTime).format(\"h:mma\");\n                    calendarItems[index].day = moment(item.start.dateTime).format(\"YYYY-MM-DD\");\n                } else if (item.start.date) {\n                    calendarItems[index].friendlyTime = \"All day\";\n                    calendarItems[index].day = moment(item.start.date).format(\"YYYY-MM-DD\");\n                }\n                if (moment().format(\"YYYY-MM-DD\") === calendarItems[index].day) {\n                    todaysEvents.push(item);\n                } else if (moment().add(1, 'days').format(\"YYYY-MM-DD\") === calendarItems[index].day) {\n                    tomorrowsEvents.push(item);\n                } else {\n                    otherEvents.push(item);\n                }\n            });\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module calendar\">\n                {!_.isEmpty(this.state.calendar) ? (\n                    <div>\n                        <h1 className=\"calendar-name\">{this.state.calendar.summary}</h1>\n\n                        {todaysEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">Today</h2>\n                                {todaysEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\">{item.friendlyTime}</p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        {tomorrowsEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">Tomorrow</h2>\n                                {tomorrowsEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\">{item.friendlyTime}</p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        {otherEvents.length ? (\n                            <div className=\"group\">\n                                <h2 className=\"group-name\">Future Events</h2>\n                                {otherEvents.map(item =>\n                                    <div className=\"event\" key={item.id}>\n                                        <p className=\"time\"><Moment format=\"M/D\">{item.day}</Moment></p> <p className=\"summary\">{item.summary}</p>\n                                    </div>\n                                )}\n                            </div>\n                        ) : null}\n\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Calendar;","import React, { Component } from 'react';\nimport './Feed.scss';\nimport _ from \"lodash\";\nimport Slider from 'react-slick';\nimport Moment from 'react-moment';\n\nclass Feed extends Component {\n    state = {\n        feed: {},\n        updated: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if (data.feed) {\n                that.setState({\n                    updated: data.feed.timestamp,\n                    feed: data.feed.body\n                });\n            }\n        });\n        this.createMarkup = this.createMarkup.bind(this);\n    }\n\n    createMarkup(markup) {\n        return { __html: markup };\n    }\n\n    render() {\n        var feedItems = [];\n        var settings = {\n            dots: false,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            autoplaySpeed: 5000,\n            autoplay: true\n        };\n        if (!_.isEmpty(this.state.feed)) {\n            feedItems = this.state.feed.items;\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module feed\">\n                {!_.isEmpty(this.state.feed) ? (\n                    <div>\n                        <Slider {...settings}>\n                            {feedItems.map(item =>\n                                <div key={item.id}>\n                                    {item.visual && item.visual.url !== \"none\" ? (\n                                        <div className=\"image\" style={{ backgroundImage: `url(${item.visual.url})` }}></div>\n                                    ) : (null)}\n                                    <div className=\"content\">\n                                        <h1 className=\"title\">{item.title}</h1>\n                                        <p className=\"summary\" dangerouslySetInnerHTML={this.createMarkup(item.summary?(item.summary.content):(item.content.content))}></p>\n                                    </div>\n                                </div>\n                            )}\n                        </Slider>\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Feed;","import React, { Component } from 'react';\nimport './Calendar.scss';\nimport _ from \"lodash\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nclass Subway extends Component {\n    state = {\n        subway: {},\n        updated: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if (data.subway) {\n                that.setState({\n                    subway: data.subway.body,\n                    updated: data.subway.timestamp\n                });\n            }\n        });\n    }\n\n    render() {\n        if (!_.isEmpty(this.state.subway)) {\n            var subway = this.state.subway;\n            var stops = [];\n            subway.forEach(function (line) {\n                line.stops.forEach(function (stop) {\n                    stops.push(stop);\n                })\n            });\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module subway\">\n                {!_.isEmpty(this.state.subway) ? (\n                    <div>\n                        {stops.map((stop, index) =>\n                            <div key={index}>\n                                <div>{stop.station}</div>\n                                {stop.updates.map((update, index) =>\n                                    <div key={index}>{moment(update.time.low * 1000).fromNow()}</div>\n                                )}\n                            </div>\n                        )}\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Subway;","import React, { Component } from 'react';\nimport 'normalize.css';\nimport './App.scss';\nimport Weather from './modules/Weather.js';\nimport Time from './modules/Time.js';\nimport Calendar from './modules/Calendar.js';\nimport Feed from './modules/Feed.js';\nimport Subway from './modules/Subway.js';\nimport io from \"socket.io-client\";\nimport TimeImage from './images/gallivantinglife-1150870-unsplash.jpg'\n\nclass App extends Component {\n  render() {\n    let socket;\n    if(process.env.NODE_ENV === \"development\") {\n      socket = io(\"localhost:3000\");\n    } else {\n      socket = io(window.location.hostname);\n    }\n    return (\n      <div className=\"App\">\n        <Time socket={socket} image={TimeImage} color=\"#313131\" />\n        <Weather socket={socket} color=\"white\" />\n        <Calendar socket={socket} color=\"#F6A44D\" calendar=\"nick@iamnickvolpe.com\" />\n        <Calendar socket={socket} color=\"#F86A68\" calendar=\"7afrbvotf8p1qcjcpbqp2639as@group.calendar.google.com\" />\n        <Calendar socket={socket} color=\"#AC79CA\" calendar=\"jenn.sager@gmail.com\" />\n        <Feed socket={socket} color=\"white\" />\n        <Subway socket={socket} color=\"#313131\" />\n      </div>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/gallivantinglife-1150870-unsplash.0c360a8b.jpg\";"],"sourceRoot":""}