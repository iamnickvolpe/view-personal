{"ast":null,"code":"import _classCallCheck from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nvolpe/Desktop/view/client/src/modules/Subway.js\";\nimport React, { Component } from 'react';\nimport './Calendar.scss';\nimport _ from \"lodash\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nvar Subway =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Subway, _Component);\n\n  function Subway() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Subway);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Subway)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      subway: {},\n      updated: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Subway, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var that = this;\n      this.props.socket.on(\"data\", function (data) {\n        if (data.subway) {\n          that.setState({\n            subway: data.subway.body,\n            updated: data.subway.timestamp\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!_.isEmpty(this.state.subway)) {\n        var subway = this.state.subway;\n        var stops = [];\n        subway.forEach(function (line) {\n          line.stops.forEach(function (stop) {\n            stops.push(stop);\n          });\n        });\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: this.props.color\n        },\n        className: \"module subway\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, !_.isEmpty(this.state.subway) ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, stops.map(function (stop, index) {\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, stop.station), React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, stop.line), stop.updates.map(function (update, index) {\n          return React.createElement(\"div\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, moment(update.time.low * 1000).fromNow());\n        }));\n      }), React.createElement(\"p\", {\n        className: \"updated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        fromNow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.state.updated))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Loading\"));\n    }\n  }]);\n\n  return Subway;\n}(Component);\n\nexport default Subway;","map":{"version":3,"sources":["/Users/nvolpe/Desktop/view/client/src/modules/Subway.js"],"names":["React","Component","_","Moment","moment","Subway","state","subway","updated","that","props","socket","on","data","setState","body","timestamp","isEmpty","stops","forEach","line","stop","push","backgroundColor","color","map","index","station","updates","update","time","low","fromNow"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,iBAAP;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;IAEMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,OAAO,EAAE;AAFL,K;;;;;;wCAKY;AAChB,UAAIC,IAAI,GAAG,IAAX;AACA,WAAKC,KAAL,CAAWC,MAAX,CAAkBC,EAAlB,CAAqB,MAArB,EAA6B,UAAUC,IAAV,EAAgB;AACzC,YAAIA,IAAI,CAACN,MAAT,EAAiB;AACbE,UAAAA,IAAI,CAACK,QAAL,CAAc;AACVP,YAAAA,MAAM,EAAEM,IAAI,CAACN,MAAL,CAAYQ,IADV;AAEVP,YAAAA,OAAO,EAAEK,IAAI,CAACN,MAAL,CAAYS;AAFX,WAAd;AAIH;AACJ,OAPD;AAQH;;;6BAEQ;AACL,UAAI,CAACd,CAAC,CAACe,OAAF,CAAU,KAAKX,KAAL,CAAWC,MAArB,CAAL,EAAmC;AAC/B,YAAIA,MAAM,GAAG,KAAKD,KAAL,CAAWC,MAAxB;AACA,YAAIW,KAAK,GAAG,EAAZ;AACAX,QAAAA,MAAM,CAACY,OAAP,CAAe,UAAUC,IAAV,EAAgB;AAC3BA,UAAAA,IAAI,CAACF,KAAL,CAAWC,OAAX,CAAmB,UAAUE,IAAV,EAAgB;AAC/BH,YAAAA,KAAK,CAACI,IAAN,CAAWD,IAAX;AACH,WAFD;AAGH,SAJD;AAKH;;AACD,aACI;AAAK,QAAA,KAAK,EAAE;AAAEE,UAAAA,eAAe,EAAE,KAAKb,KAAL,CAAWc;AAA9B,SAAZ;AAAmD,QAAA,SAAS,EAAC,eAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,CAACtB,CAAC,CAACe,OAAF,CAAU,KAAKX,KAAL,CAAWC,MAArB,CAAD,GACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKW,KAAK,CAACO,GAAN,CAAU,UAACJ,IAAD,EAAOK,KAAP;AAAA,eACP;AAAK,UAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAML,IAAI,CAACM,OAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMN,IAAI,CAACD,IAAX,CAFJ,EAGKC,IAAI,CAACO,OAAL,CAAaH,GAAb,CAAiB,UAACI,MAAD,EAASH,KAAT;AAAA,iBACd;AAAK,YAAA,GAAG,EAAEA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACKtB,MAAM,CAACyB,MAAM,CAACC,IAAP,CAAYC,GAAZ,GAAkB,IAAnB,CAAN,CAA+BC,OAA/B,EADL,CADc;AAAA,SAAjB,CAHL,CADO;AAAA,OAAV,CADL,EAYI;AAAG,QAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuB,oBAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAiB,KAAK1B,KAAL,CAAWE,OAA5B,CAAvB,CAZJ,CADH,GAeG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhBR,CADJ;AAoBH;;;;EAhDgBP,S;;AAmDrB,eAAeI,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport './Calendar.scss';\nimport _ from \"lodash\";\nimport Moment from \"react-moment\";\nimport moment from \"moment\";\n\nclass Subway extends Component {\n    state = {\n        subway: {},\n        updated: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        this.props.socket.on(\"data\", function (data) {\n            if (data.subway) {\n                that.setState({\n                    subway: data.subway.body,\n                    updated: data.subway.timestamp\n                });\n            }\n        });\n    }\n\n    render() {\n        if (!_.isEmpty(this.state.subway)) {\n            var subway = this.state.subway;\n            var stops = [];\n            subway.forEach(function (line) {\n                line.stops.forEach(function (stop) {\n                    stops.push(stop);\n                })\n            });\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module subway\">\n                {!_.isEmpty(this.state.subway) ? (\n                    <div>\n                        {stops.map((stop, index) =>\n                            <div key={index}>\n                                <div>{stop.station}</div>\n                                <div>{stop.line}</div>\n                                {stop.updates.map((update, index) =>\n                                    <div key={index}>\n                                        {moment(update.time.low * 1000).fromNow()}\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Subway;"]},"metadata":{},"sourceType":"module"}