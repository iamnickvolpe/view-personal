{"ast":null,"code":"import _classCallCheck from \"/Users/nicholasvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nicholasvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nicholasvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nicholasvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nicholasvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nicholasvolpe/Desktop/view/client/src/modules/Time.js\";\nimport React, { Component } from 'react';\nimport Moment from \"react-moment\";\nimport './Time.scss';\n\nvar Time =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Time, _Component);\n\n  function Time() {\n    _classCallCheck(this, Time);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Time).apply(this, arguments));\n  }\n\n  _createClass(Time, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var canvas = this.refs.canvas;\n      canvas.width = 2000;\n      canvas.height = 2000;\n      canvas.style.width = \"80%\";\n      canvas.style.height = \"80%\";\n      var ctx = this.refs.canvas.getContext('2d');\n      var radius = canvas.height / 4;\n      ctx.scale(2, 2);\n      ctx.translate(radius, radius);\n      radius = radius * 0.8;\n      setInterval(function () {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.save();\n        drawNumbers(ctx, radius);\n        drawSeasons(ctx, radius);\n        drawTime(ctx, radius);\n        ctx.restore();\n      }, 1000);\n\n      function drawNumbers(ctx, radius) {\n        var ang;\n        ctx.font = radius * 0.15 + \"px arial\";\n        ctx.fillStyle = \"white\";\n        ctx.textBaseline = \"middle\";\n        ctx.textAlign = \"center\";\n        var months = [\"Jan\", \"•\", \"•\", \"Apr\", \"•\", \"•\", \"Jul\", \"•\", \"•\", \"Oct\", \"•\", \"•\"];\n        months.forEach(function (month, num) {\n          ang = num * Math.PI / 6;\n          ctx.rotate(ang);\n          ctx.translate(0, -radius * 0.75);\n          ctx.rotate(-ang);\n          ctx.fillText(month, 0, 0);\n          ctx.rotate(ang);\n          ctx.translate(0, radius * 0.75);\n          ctx.rotate(-ang);\n        });\n      }\n\n      function drawSeasons(ctx, radius) {\n        var now = new Date();\n        var winterStartMS = new Date(now.getFullYear() - 1, 11, 21).getTime();\n        var winterEndMS = new Date(now.getFullYear(), 2, 20).getTime();\n        var startMS = new Date(now.getFullYear(), 3, 1).getTime();\n        var totalDistanceMS = 31536000000;\n        var totalDistanceRadians = 2 * Math.PI;\n        var winterStartDistanceMS = winterStartMS - startMS;\n        var winterEndDistanceMS = winterEndMS - startMS;\n        var winterStartDistanceRatio = winterStartDistanceMS / totalDistanceMS;\n        var winterEndDistanceRatio = winterEndDistanceMS / totalDistanceMS;\n        var winterStartRadians = totalDistanceRadians * winterStartDistanceRatio;\n        var winterEndRadians = totalDistanceRadians * winterEndDistanceRatio;\n        console.log(winterStartRadians, winterEndRadians);\n        ctx.beginPath();\n        ctx.strokeStyle = \"#8FE4FF\";\n        ctx.lineWidth = radius * 0.06;\n        ctx.arc(0, 0, radius, winterStartRadians, winterEndRadians);\n        ctx.stroke();\n        ctx.closePath();\n        /*ctx.beginPath();\n        ctx.strokeStyle= \"#BCFF79\";\n        ctx.lineWidth = radius * 0.06;\n        ctx.arc(0, 0, radius, 0, .5*Math.PI);\n        ctx.stroke();\n        ctx.closePath();\n         ctx.beginPath();\n        ctx.strokeStyle= \"#FFED48\";\n        ctx.lineWidth = radius * 0.06;\n        ctx.arc(0, 0, radius, .5*Math.PI, 1*Math.PI);\n        ctx.stroke();\n        ctx.closePath();\n         ctx.beginPath();\n        ctx.strokeStyle= \"#FFBC7E\";\n        ctx.lineWidth = radius * 0.06;\n        ctx.arc(0, 0, radius, 1*Math.PI, 1.5*Math.PI);\n        ctx.stroke();\n        ctx.closePath();*/\n      }\n\n      function drawTime(ctx, radius) {\n        var now = new Date();\n        var nowMS = now.getTime();\n        var startMS = new Date(new Date().getFullYear(), 0, 1).getTime();\n        var endMS = new Date(new Date().getFullYear(), 11, 31).getTime();\n        var totalMS = endMS - startMS;\n        var elapsedMS = nowMS - startMS;\n        var ratio = elapsedMS / totalMS;\n        var degrees = 360 * ratio;\n        var radians = degrees * (Math.PI / 180);\n        radians = radians.toFixed(6);\n        ctx.beginPath();\n        ctx.strokeStyle = \"white\";\n        ctx.lineWidth = radius * 0.02;\n        ctx.lineCap = \"round\";\n        ctx.moveTo(0, 0);\n        ctx.rotate(radians);\n        ctx.lineTo(0, -radius * 0.9);\n        ctx.stroke();\n        ctx.closePath();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundImage: \"url(\".concat(this.props.image, \")\"),\n          backgroundColor: this.props.color\n        },\n        className: \"module time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"time\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"h:mm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"ampm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"A\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        format: \"dddd, MMMM Do\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"clock\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"canvas\", {\n        ref: \"canvas\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Time;\n}(Component);\n\nexport default Time;","map":{"version":3,"sources":["/Users/nicholasvolpe/Desktop/view/client/src/modules/Time.js"],"names":["React","Component","Moment","Time","canvas","refs","width","height","style","ctx","getContext","radius","scale","translate","setInterval","clearRect","save","drawNumbers","drawSeasons","drawTime","restore","ang","font","fillStyle","textBaseline","textAlign","months","forEach","month","num","Math","PI","rotate","fillText","now","Date","winterStartMS","getFullYear","getTime","winterEndMS","startMS","totalDistanceMS","totalDistanceRadians","winterStartDistanceMS","winterEndDistanceMS","winterStartDistanceRatio","winterEndDistanceRatio","winterStartRadians","winterEndRadians","console","log","beginPath","strokeStyle","lineWidth","arc","stroke","closePath","nowMS","endMS","totalMS","elapsedMS","ratio","degrees","radians","toFixed","lineCap","moveTo","lineTo","backgroundImage","props","image","backgroundColor","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Moment from \"react-moment\";\nimport './Time.scss';\n\nclass Time extends Component {\n  componentDidMount() {\n    var canvas = this.refs.canvas;\n    canvas.width = 2000;\n    canvas.height = 2000;\n    canvas.style.width = \"80%\";\n    canvas.style.height = \"80%\";\n\n    const ctx = this.refs.canvas.getContext('2d');\n    var radius = canvas.height / 4;\n    ctx.scale(2, 2);\n    ctx.translate(radius, radius);\n    radius = radius * 0.8;\n    \n    setInterval(function () {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.save();\n      drawNumbers(ctx, radius);\n      drawSeasons(ctx, radius);\n      drawTime(ctx, radius);\n      ctx.restore();\n    }, 1000);\n\n    function drawNumbers(ctx, radius) {\n      var ang;\n      ctx.font = radius * 0.15 + \"px arial\";\n      ctx.fillStyle = \"white\";\n      ctx.textBaseline = \"middle\";\n      ctx.textAlign = \"center\";\n      var months = [\n        \"Jan\",\n        \"•\",\n        \"•\",\n        \"Apr\",\n        \"•\",\n        \"•\",\n        \"Jul\",\n        \"•\",\n        \"•\",\n        \"Oct\",\n        \"•\",\n        \"•\"\n      ];\n      months.forEach(function (month, num) {\n        ang = num * Math.PI / 6;\n        ctx.rotate(ang);\n        ctx.translate(0, -radius * 0.75);\n        ctx.rotate(-ang);\n        ctx.fillText(month, 0, 0);\n        ctx.rotate(ang);\n        ctx.translate(0, radius * 0.75);\n        ctx.rotate(-ang);\n      });\n    }\n\n    function drawSeasons(ctx, radius) {\n      var now = new Date();\n      var winterStartMS = new Date(now.getFullYear() -1, 11, 21).getTime();\n      var winterEndMS = new Date(now.getFullYear(), 2, 20).getTime();\n      var startMS = new Date(now.getFullYear(), 3, 1).getTime();\n\n      var totalDistanceMS = 31536000000;\n      var totalDistanceRadians = 2 * Math.PI;\n      \n      var winterStartDistanceMS = winterStartMS - startMS;\n      var winterEndDistanceMS = winterEndMS - startMS;\n\n      var winterStartDistanceRatio  =  winterStartDistanceMS / totalDistanceMS;\n      var winterEndDistanceRatio  =  winterEndDistanceMS / totalDistanceMS;\n      \n      var winterStartRadians = totalDistanceRadians * winterStartDistanceRatio;\n      var winterEndRadians = totalDistanceRadians * winterEndDistanceRatio;\n\n      console.log(winterStartRadians, winterEndRadians)\n\n      ctx.beginPath();\n      ctx.strokeStyle= \"#8FE4FF\";\n      ctx.lineWidth = radius * 0.06;\n      ctx.arc(0, 0, radius, winterStartRadians, winterEndRadians);\n      ctx.stroke();\n      ctx.closePath();\n\n      /*ctx.beginPath();\n      ctx.strokeStyle= \"#BCFF79\";\n      ctx.lineWidth = radius * 0.06;\n      ctx.arc(0, 0, radius, 0, .5*Math.PI);\n      ctx.stroke();\n      ctx.closePath();\n\n      ctx.beginPath();\n      ctx.strokeStyle= \"#FFED48\";\n      ctx.lineWidth = radius * 0.06;\n      ctx.arc(0, 0, radius, .5*Math.PI, 1*Math.PI);\n      ctx.stroke();\n      ctx.closePath();\n\n      ctx.beginPath();\n      ctx.strokeStyle= \"#FFBC7E\";\n      ctx.lineWidth = radius * 0.06;\n      ctx.arc(0, 0, radius, 1*Math.PI, 1.5*Math.PI);\n      ctx.stroke();\n      ctx.closePath();*/\n    }\n\n    function drawTime(ctx, radius) {\n      var now = new Date();\n      var nowMS = now.getTime();\n      var startMS = new Date(new Date().getFullYear(), 0, 1).getTime();\n      var endMS = new Date(new Date().getFullYear(), 11, 31).getTime();\n      var totalMS = endMS - startMS;\n      var elapsedMS = nowMS - startMS;\n      var ratio = elapsedMS / totalMS;\n      var degrees = 360 * ratio;\n      var radians = degrees * (Math.PI / 180);\n      radians = radians.toFixed(6);\n\n      ctx.beginPath();\n      ctx.strokeStyle = \"white\";\n      ctx.lineWidth = radius * 0.02;\n      ctx.lineCap = \"round\";\n      ctx.moveTo(0, 0);\n      ctx.rotate(radians);\n      ctx.lineTo(0, -radius * 0.9);\n      ctx.stroke();\n      ctx.closePath();\n    }\n  }\n\n  render() {\n    return (\n      <div style={{ backgroundImage: `url(${this.props.image})`, backgroundColor: this.props.color }} className=\"module time\">\n        <div className=\"content\">\n          <div className=\"time\">\n            <Moment format=\"h:mm\" /><span className=\"ampm\"><Moment format=\"A\" /></span>\n          </div>\n          <div className=\"date\">\n            <Moment format=\"dddd, MMMM Do\" />\n          </div>\n          <div className=\"clock\"><canvas ref=\"canvas\"></canvas></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Time;"]},"metadata":{},"sourceType":"module"}