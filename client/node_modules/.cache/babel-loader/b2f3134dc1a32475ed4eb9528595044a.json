{"ast":null,"code":"import _classCallCheck from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nvolpe/Desktop/view/client/src/modules/Weather.js\";\nimport React, { Component } from 'react';\nimport './Weather.scss';\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport Moment from \"react-moment\";\n\nvar Weather =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Weather, _Component);\n\n  function Weather() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Weather);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Weather)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      weather: {},\n      updated: \"\",\n      icon: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Weather, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var that = this;\n      io().on(\"data\", function (data) {\n        if (data.weather) {\n          that.setState({\n            updated: data.weather.timestamp,\n            icon: data.weather.body.currently.icon,\n            weather: data.weather.body\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var temperature = \"--\";\n      var now = \"--\";\n      var apparentTemperature = \"--\";\n      var dailyData = [];\n\n      if (!_.isEmpty(this.state.weather)) {\n        temperature = Math.round(this.state.weather.currently.temperature);\n        apparentTemperature = Math.round(this.state.weather.currently.apparentTemperature);\n        now = this.state.weather.minutely.summary;\n        dailyData = this.state.weather.daily.data;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: this.props.color\n        },\n        className: \"weather module\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, !_.isEmpty(this.state.weather) ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"now\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"temperature\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, temperature, \"\\xB0\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Feels like \", apparentTemperature, \"\\xB0\")), React.createElement(\"div\", {\n        className: \"summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, now)), React.createElement(\"div\", {\n        className: \"day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"group-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Today H\", Math.round(dailyData[0].temperatureHigh), \"\\xB0 L\", Math.round(dailyData[0].temperatureLow), \"\\xB0\"), React.createElement(\"div\", {\n        className: \"day-summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, dailyData[0].summary)), React.createElement(\"div\", {\n        className: \"day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"group-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Tomorrow H\", Math.round(dailyData[1].temperatureHigh), \"\\xB0 L\", Math.round(dailyData[1].temperatureLow), \"\\xB0\"), React.createElement(\"div\", {\n        className: \"day-summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, dailyData[1].summary)), React.createElement(\"div\", {\n        className: \"day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"group-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, moment.unix(dailyData[2].time).format(\"dddd\"), \" H\", Math.round(dailyData[2].temperatureHigh), \"\\xB0 L\", Math.round(dailyData[2].temperatureLow), \"\\xB0\"), React.createElement(\"div\", {\n        className: \"day-summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, dailyData[2].summary)), React.createElement(\"p\", {\n        className: \"updated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        fromNow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, this.state.updated))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Loading\"));\n    }\n  }]);\n\n  return Weather;\n}(Component);\n\nexport default Weather;","map":{"version":3,"sources":["/Users/nvolpe/Desktop/view/client/src/modules/Weather.js"],"names":["React","Component","_","moment","Moment","Weather","state","weather","updated","icon","that","io","on","data","setState","timestamp","body","currently","temperature","now","apparentTemperature","dailyData","isEmpty","Math","round","minutely","summary","daily","backgroundColor","props","color","temperatureHigh","temperatureLow","unix","time","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Weather.scss';\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport Moment from \"react-moment\";\n\nclass Weather extends Component {\n    state = {\n        weather: {},\n        updated: \"\",\n        icon: \"\"\n    }\n\n    componentDidMount() {\n        var that = this;\n        io().on(\"data\", function (data) {\n            if(data.weather) {\n                that.setState({ \n                    updated: data.weather.timestamp, \n                    icon: data.weather.body.currently.icon,\n                    weather: data.weather.body\n                });\n            }\n        });\n    }\n\n    render() {\n        var temperature = \"--\";\n        var now = \"--\"\n        var apparentTemperature = \"--\";\n        var dailyData = [];\n        if (!_.isEmpty(this.state.weather)) {\n            temperature = Math.round(this.state.weather.currently.temperature);\n            apparentTemperature = Math.round(this.state.weather.currently.apparentTemperature);\n            now = this.state.weather.minutely.summary;\n            dailyData = this.state.weather.daily.data;\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"weather module\">\n                {!_.isEmpty(this.state.weather) ? (\n                    <div>\n                        <div className=\"now\">\n                            <div><span className=\"temperature\">{temperature}&deg;</span><span>Feels like {apparentTemperature}&deg;</span></div>\n                            <div className=\"summary\">{now}</div>\n                        </div>\n\n                        <div className=\"day\">\n                            <h2 className=\"group-name\">Today H{Math.round(dailyData[0].temperatureHigh)}&deg; L{Math.round(dailyData[0].temperatureLow)}&deg;</h2>\n                            <div className=\"day-summary\">{dailyData[0].summary}</div>\n                        </div>\n\n                        <div className=\"day\">\n                            <h2 className=\"group-name\">Tomorrow H{Math.round(dailyData[1].temperatureHigh)}&deg; L{Math.round(dailyData[1].temperatureLow)}&deg;</h2>\n                            <div className=\"day-summary\">{dailyData[1].summary}</div>\n                        </div>\n\n                        <div className=\"day\">\n                            <h2 className=\"group-name\">{moment.unix(dailyData[2].time).format(\"dddd\")} H{Math.round(dailyData[2].temperatureHigh)}&deg; L{Math.round(dailyData[2].temperatureLow)}&deg;</h2>\n                            <div className=\"day-summary\">{dailyData[2].summary}</div>\n                        </div>\n\n\n\n                        <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Weather;"]},"metadata":{},"sourceType":"module"}