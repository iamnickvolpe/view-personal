{"ast":null,"code":"import _classCallCheck from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/nvolpe/Desktop/view/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/nvolpe/Desktop/view/client/src/modules/Feed.js\";\nimport React, { Component } from 'react';\nimport './Feed.scss';\nimport io from \"socket.io-client\";\nimport _ from \"lodash\";\nimport Slider from 'react-slick';\nimport Moment from 'react-moment';\n\nvar Feed =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Feed, _Component);\n\n  function Feed() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Feed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Feed)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      feed: {},\n      updated: \"\"\n    };\n    _this.socket = io('localhost:3001');\n    return _this;\n  }\n\n  _createClass(Feed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var that = this;\n      this.socket.on(\"data\", function (data) {\n        console.log(data);\n\n        if (data.feed) {\n          that.setState({\n            updated: data.feed.timestamp,\n            feed: data.feed.body\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var feedItems = [];\n      var settings = {\n        dots: false,\n        infinite: true,\n        speed: 500,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplaySpeed: 1000,\n        autoplay: true\n      };\n\n      if (!_.isEmpty(this.state.feed)) {\n        feedItems = this.state.feed.items;\n      }\n\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: this.props.color\n        },\n        className: \"module feed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, !_.isEmpty(this.state.feed) ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Slider, Object.assign({}, settings, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), feedItems.map(function (item) {\n        return React.createElement(\"div\", {\n          key: item.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, item.visual && item.visual.url !== \"none\" ? React.createElement(\"div\", {\n          className: \"image\",\n          style: {\n            backgroundImage: \"url(\".concat(item.visual.url, \")\")\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }) : null, React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, item.title), item.summary && item.summary.content !== \"none\" ? React.createElement(\"p\", {\n          dangerouslySetInnerHTML: item.summary.content,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }) : null));\n      })), React.createElement(\"p\", {\n        className: \"updated\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Moment, {\n        fromNow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, this.state.updated))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Loading\"));\n    }\n  }]);\n\n  return Feed;\n}(Component);\n\nexport default Feed;","map":{"version":3,"sources":["/Users/nvolpe/Desktop/view/client/src/modules/Feed.js"],"names":["React","Component","io","_","Slider","Moment","Feed","state","feed","updated","socket","that","on","data","console","log","setState","timestamp","body","feedItems","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplaySpeed","autoplay","isEmpty","items","backgroundColor","props","color","map","item","id","visual","url","backgroundImage","title","summary","content"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './Feed.scss';\nimport io from \"socket.io-client\";\nimport _ from \"lodash\";\nimport Slider from 'react-slick';\nimport Moment from 'react-moment';\n\nclass Feed extends Component {\n    state = {\n        feed: {},\n        updated: \"\"\n    }\n    socket = io('localhost:3001');\n\n    componentDidMount() {\n        var that = this;\n        this.socket.on(\"data\", function (data) {\n            console.log(data)\n            if (data.feed) {\n                that.setState({\n                    updated: data.feed.timestamp,\n                    feed: data.feed.body\n                });\n            }\n        });\n    }\n\n    render() {\n        var feedItems = [];\n        var settings = {\n            dots: false,\n            infinite: true,\n            speed: 500,\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            autoplaySpeed: 1000,\n            autoplay: true\n        };\n        if (!_.isEmpty(this.state.feed)) {\n            feedItems = this.state.feed.items;\n        }\n        return (\n            <div style={{ backgroundColor: this.props.color }} className=\"module feed\">\n                {!_.isEmpty(this.state.feed) ? (\n                    <div>\n                    <Slider {...settings}>\n                        {feedItems.map(item =>\n                            <div key={item.id}>\n                                {item.visual && item.visual.url !== \"none\"?(\n                                    <div className=\"image\" style={{backgroundImage: `url(${item.visual.url})`}}></div>\n                                ):(null)}\n                                <div className=\"content\">\n                                    <h1>{item.title}</h1>\n                                    {item.summary && item.summary.content !== \"none\"?(\n                                        <p dangerouslySetInnerHTML={item.summary.content}></p>\n                                    ):(null)}\n                                </div>\n                            </div>\n                        )}\n                    </Slider>\n                    <p className=\"updated\"><Moment fromNow>{this.state.updated}</Moment></p>\n                    </div>\n                ) : <div>Loading</div>}\n            </div>\n        );\n    }\n}\n\nexport default Feed;"]},"metadata":{},"sourceType":"module"}